CT_CONFIG_VERSION="3"
CT_EXPERIMENTAL=y

CT_ARCH_RISCV=y
CT_ARCH_64=y

# CT_ARCH_ARCH controls the specific architecture that the toolchain's libraries
# are built with. It should specify the minimum RISC-V extensions that need to
# be implemented by any processor that this toolchain will compile programs for.
CT_ARCH_ARCH="rv64imac"

# CT_ARCH_ABI controls the specific ABI that the toolchain's libraries are built
# with. All programs built against this toolchain should follow exactly this
# ABI.
CT_ARCH_ABI="lp64"

CT_TARGET_CFLAGS="-mcmodel=medany"

CT_TARGET_VENDOR=""
CT_TOOLCHAIN_BUGURL="toolchains@lowrisc.org"

CT_DOWNLOAD_AGENT_CURL=y

CT_CC_GCC_STATIC_LIBSTDCXX=y
# CT_CC_GCC_LDBL_128 is not set
CT_CC_LANG_CXX=y
CT_GCC_V_9=y
CT_DEBUG_GDB=y
CT_GDB_V_11_1=y
# CT_GDB_CROSS_PYTHON is not set
CT_PATCH_ORDER="bundled,local"
CT_PATCH_BUNDLED_LOCAL=y
CT_PATCH_USE_LOCAL=y

# Disable progress bar for CI builds, it generates too much log output
# CT_LOG_PROGRESS_BAR is not set

# Installation prefix directory; the toolchain will end up in exactly
# this directory.
CT_PREFIX_DIR="/tools/riscv"

# Don't save tarballs for re-use (needs writable and pre-created
# CT_LOCAL_TARBALLS_DIR otherwise)
# CT_SAVE_TARBALLS is not set

# Don't chmod the CT_PREFIX_DIR read-only after the install.
# CT_PREFIX_DIR_RO is not set

# GCC 10.2.0 (tag releases/gcc-10.2.0, commit ee5c3db6c5b)
CT_GCC_SRC_DEVEL=y
CT_GCC_DEVEL_VCS_git=y
CT_GCC_DEVEL_URL="https://gcc.gnu.org/git/gcc.git"
CT_GCC_DEVEL_REVISION="ee5c3db6c5b2c3332912fb4c9cfa2864569ebd9a"

# The build script appends a definition of CT_LOCAL_PATCH_DIR down here, that
# points to the repo's patch directory.
